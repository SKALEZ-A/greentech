{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SensorData",
  "description": "Schema for sensor data readings from carbon capture units",
  "type": "object",
  "properties": {
    "_id": {
      "type": "string",
      "description": "MongoDB ObjectId"
    },
    "sensorId": {
      "type": "string",
      "description": "Unique sensor identifier",
      "pattern": "^[A-Za-z0-9_-]+$"
    },
    "unitId": {
      "type": "string",
      "description": "Carbon capture unit identifier",
      "pattern": "^CC-\\d{3}$"
    },
    "sensorType": {
      "type": "string",
      "enum": [
        "temperature",
        "pressure",
        "flow_rate",
        "co2_concentration",
        "humidity",
        "air_quality",
        "energy_consumption",
        "vibration",
        "noise_level",
        "particulate_matter"
      ],
      "description": "Type of sensor measurement"
    },
    "value": {
      "type": "number",
      "description": "Sensor reading value"
    },
    "unit": {
      "type": "string",
      "description": "Unit of measurement",
      "maxLength": 10
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of reading"
    },
    "quality": {
      "type": "string",
      "enum": ["good", "warning", "critical"],
      "description": "Quality assessment of reading",
      "default": "good"
    },
    "metadata": {
      "type": "object",
      "description": "Additional sensor-specific metadata",
      "properties": {
        "calibrationOffset": {
          "type": "number",
          "description": "Calibration offset applied"
        },
        "rawValue": {
          "type": "number",
          "description": "Raw unprocessed value"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence level of reading"
        },
        "batchId": {
          "type": "string",
          "description": "Batch identifier for grouped readings"
        }
      },
      "additionalProperties": true
    },
    "location": {
      "type": "object",
      "description": "Geographic location of sensor",
      "properties": {
        "latitude": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "altitude": {
          "type": "number",
          "description": "Altitude in meters"
        }
      },
      "required": ["latitude", "longitude"]
    },
    "processed": {
      "type": "boolean",
      "description": "Whether data has been processed by analytics",
      "default": false
    },
    "anomaly": {
      "type": "boolean",
      "description": "Whether reading is flagged as anomalous",
      "default": false
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Document creation timestamp"
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Document last update timestamp"
    }
  },
  "required": [
    "sensorId",
    "unitId",
    "sensorType",
    "value",
    "unit",
    "timestamp"
  ],
  "indexes": [
    {
      "name": "sensor_timestamp",
      "key": {
        "sensorId": 1,
        "timestamp": -1
      }
    },
    {
      "name": "unit_timestamp",
      "key": {
        "unitId": 1,
        "timestamp": -1
      }
    },
    {
      "name": "sensor_type_timestamp",
      "key": {
        "sensorType": 1,
        "timestamp": -1
      }
    },
    {
      "name": "quality_timestamp",
      "key": {
        "quality": 1,
        "timestamp": -1
      }
    },
    {
      "name": "location_2dsphere",
      "key": {
        "location": "2dsphere"
      }
    },
    {
      "name": "processed_timestamp",
      "key": {
        "processed": 1,
        "timestamp": -1
      }
    },
    {
      "name": "anomaly_timestamp",
      "key": {
        "anomaly": 1,
        "timestamp": -1
      }
    }
  ]
}

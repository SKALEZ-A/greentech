apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "carbon-capture-network.fullname" . }}-backend
  labels:
    app.kubernetes.io/name: {{ include "carbon-capture-network.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "carbon-capture-network.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "carbon-capture-network.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: backend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/backend-configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "carbon-capture-network.serviceAccountName" . }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        runAsNonRoot: {{ .runAsNonRoot }}
        runAsUser: {{ .runAsUser }}
        fsGroup: {{ .fsGroup }}
      {{- end }}
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.backend.env.NODE_ENV | quote }}
            - name: PORT
              value: {{ .Values.backend.env.PORT | quote }}
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "carbon-capture-network.fullname" . }}-database
                  key: mongodb-uri
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "carbon-capture-network.fullname" . }}-redis
                  key: redis-url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "carbon-capture-network.fullname" . }}-jwt
                  key: secret
            - name: AI_ENGINE_URL
              value: "http://{{ include "carbon-capture-network.fullname" . }}-ai-engine:{{ .Values.aiEngine.service.port }}"
          envFrom:
            - configMapRef:
                name: {{ include "carbon-capture-network.fullname" . }}-backend-config
          {{- with .Values.backend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: cors-config
              mountPath: /app/config/security/cors.json
              subPath: cors.json
      volumes:
        - name: cors-config
          configMap:
            name: {{ include "carbon-capture-network.fullname" . }}-cors-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
